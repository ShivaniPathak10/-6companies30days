/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 struct pal{
     int sum=0;
     int small=INT_MAX;
     int largest=INT_MIN; 
     };
class Solution {
public:
int ans=0;
pal fun(TreeNode* root){
    if(root==NULL){
        pal t;
        return t;
    }

    pal left=fun(root->left);
    pal right=fun(root->right);
    pal temp;
    if(root->val>left.largest&&root->val<right.small){

            temp.sum=left.sum+root->val+right.sum;
            temp.small=min(left.small,min(right.small,root->val));
            temp.largest=max(left.largest,max(right.largest,root->val));
            ans=max(ans,temp.sum);

    }
    else{

        temp.sum=0;
        temp.small=INT_MIN;
        temp.largest=INT_MAX;
    }

    return temp;
}

    int maxSumBST(TreeNode* root) {
        pal temp2=fun(root);
      
        return ans;
    }
};